1. 読み捨て _ とかかな。
2. ByteString を切り離してもいいかもしれない <- ただし lazy ByteString が必要
3. ByteString ではなく Lazy.ByteString を中間として使っているがその正当性を考慮する
4. expression で if ... then ... else ... や \... -> ... や case ... of ... や
	let ... in ... を許すべきかどうか考える
	必要かどうかが問題だ
5. 以下の refactoring
	examples/readBitmap.hs
	examples/readHex.hs
	examples/tiny.hs
	examples/bits.hs
	examples/bitsb.hs
	examples/bitslb.hs
	examples/tobits.hs
6. field の値が正しくなかった場合に error を出して終了する仕様を直す
	あるいは error のままにするほうが良いかもしれない
	error のままであったとしても exception を選ぶべきか考える
7. homepage の作成
8. 今の実装では固定値の場合、Integer と ByteString に型が決まってしまう
	固定値の場合に bit で指定することができないという問題がある
	これを解決するべきか、あるいは使用頻度が低いと考えるか
	むしろ 1bit 固定値として Bool 値として False/True を固定値として加えるか
	後者のやりかたはうまくいきそうな気がする
